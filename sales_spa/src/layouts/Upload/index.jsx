import React from 'react';
import axios from 'axios';

import style from './style.module.scss';

const Upload = () => {
    const [file, setFile] = React.useState(null);
    const [errorMessage, setErrorMessage] = React.useState('');

    const handleFileChange = (event) => {
        const selectedFile = event.target.files[0];
        if (
            selectedFile &&
            selectedFile.type ===
                'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
        ) {
            setFile(selectedFile);
            setErrorMessage('');
        } else {
            setFile(null);
            setErrorMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª Excel‚õî');
        }
    };

    const handleFileUpload = async () => {
        if (file) {
            try {
                const formData = new FormData();
                formData.append('file', file);
                await axios.post('http://127.0.0.1:8000/api/upload', formData);
                setFile(null);
            } catch (error) {
                setErrorMessage(
                    `–û–π! –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ üò£
        –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª –∑–∞–Ω–æ–≤–æ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É`,
                );
            }
        }
    };

    const handleUploadTest = async () => {
        try {
            const response = await axios.get('/test_data.xlsx');
            const testFile = new Blob([response.data], {
                type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
            });
            const formData = new FormData();
            formData.append('file', testFile);
            await axios.post('http://127.0.0.1:8000/api/upload', formData); //–û–±–Ω–æ–≤–∏—Ç—å API
        } catch (error) {
            setErrorMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞.');
        }
    };

    return (
        <div className={style.container}>
            <h1 className={style.head}>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!</h1>
            <div className={style.wrapper}>
                {!file ? (
                    <h2>–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑, –∑–∞–≥—Ä—É–∑–∏—Ç–µ Excel-—Ñ–∞–π–ª üìÅ</h2>
                ) : (
                    <h2>
                        –í—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª: <span className={style.fileName}>{file.name}</span> üìÇ
                    </h2>
                )}
                <div className={style.wrapperFile}>
                    {file ? (
                        <p className={style.infoFile}>
                            –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞ <br />
                            –Ω–∞–∂–º–∏—Ç–µ –∏–ª–∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Å—é–¥–∞
                        </p>
                    ) : (
                        <p className={style.infoFile}>
                            –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Å—é–¥–∞ —Ñ–∞–π–ª <br />
                            –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å
                        </p>
                    )}

                    <input type="file" onChange={handleFileChange} />

                    {errorMessage && <p className={style.error}>{errorMessage}</p>}
                </div>
                <div className={style.alternate}>
                    {file && !errorMessage ? (
                        <button onClick={handleFileUpload}>
                            –ù–∞—á–∞—Ç—å! üöÄ
                        </button>
                    ) : (
                        <>
                            <h2>..–∏–ª–∏ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞</h2>
                            <button onClick={handleUploadTest}>–∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ!</button>
                        </>
                    )}
                </div>
            </div>
        </div>
    );
};

export default Upload;
